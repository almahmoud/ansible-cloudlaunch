---
- name: Create cloudlaunch user group
  group:
    name: "{{ system_group }}"
    state: present

- name: Create cloudlaunch user
  user:
    name: "{{ system_user }}"
    comment: "Cloudlaunch Web User"
    group: "{{ system_group }}"
    shell: /bin/bash

- name: Create cloudlaunch directories
  file:
    path: "{{ server_install_dir }}"
    state: 'directory'
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0755'

- name: Checkout cloudlaunch server source
  git:
    repo: "https://github.com/galaxyproject/cloudlaunch"
    dest: "{{ server_install_dir }}"
    accept_hostkey: yes
    force: yes
  notify:
    - restart supervisor

- name: Update setuptools inside venv
  pip:
    name: setuptools
    virtualenv: "{{ server_venv }}"
    state: latest
    virtualenv_python: python3.5

- name: Install server requirements
  pip:
    requirements: "{{ server_install_dir }}/requirements.txt"
    virtualenv: "{{ server_venv }}"
    state: latest
    virtualenv_python: python3.5
  tags:
    - install
    - deploy

- name: Create cloudlaunch application database
  postgresql_db:
    name: "{{ dbname }}"
    state: present
  become: true
  become_user: postgres

- name: Create cloudlaunch DB user
  postgresql_user:
    db: "{{ dbname }}"
    name: "{{ dbuser }}"
    password: "{{ dbpassword }}"
    priv: ALL
    state: present
  become: true
  become_user: postgres

- name: Change database password
  replace:
    dest: "{{ server_install_dir }}/django-cloudlaunch/cloudlaunchserver/settings.py"
    regexp: "DBPWDCHANGEMEONINSTALL"
    replace: "{{ dbpassword }}"
  tags:
    - install
    - deploy

- name: Set Sentry DSN
  replace:
    dest: "{{ server_install_dir }}/django-cloudlaunch/cloudlaunchserver/settings.py"
    regexp: "your_sentry_dsn"
    replace: "{{ sentry_dsn }}"
  tags:
    - install
    - deploy

- name: Change broker password
  replace:
    dest: "{{ server_install_dir }}/django-cloudlaunch/cloudlaunchserver/celeryconfig.py"
    regexp: "broker_url = 'redis://localhost:6379/0'"
    replace: "broker_url = 'amqp://{{ broker_user }}:{{ broker_pwd }}@localhost:5672/'"
  tags:
    - install
    - deploy

- name: Django migrate
  django_manage:
    command: migrate
    app_path: "{{ server_install_dir }}/django-cloudlaunch"
    virtualenv: "{{ server_venv }}"
  tags:
    - install
    - deploy

- name: Django collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ server_install_dir }}/django-cloudlaunch"
    virtualenv: "{{ server_venv }}"
  tags:
    - install
    - deploy

- name: Check if django superuser exists
  django_manage:
    app_path: "{{ server_install_dir }}/django-cloudlaunch"
    virtualenv: "{{ server_venv }}"
    command: shell -c 'import sys; from django.contrib.auth import get_user_model; User = get_user_model(); sys.exit(0 if User.objects.filter(username="{{ cloudlaunch_admin_user }}").count() > 0 else 1)'
  register: checksuperuser
  ignore_errors: True
  changed_when: False

- name: django create superuser
  django_manage:
    app_path: "{{ server_install_dir }}/django-cloudlaunch"
    virtualenv: "{{ server_venv }}"
    command: shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('{{ cloudlaunch_admin_user }}', '{{ cloudlaunch_admin_email }}', '{{ cloudlaunch_admin_password }}')"
  when: checksuperuser.failed

- name: Set skey
  replace:
    path: "{{ server_install_dir }}/django-cloudlaunch/cloudlaunchserver/settings.py"
    regexp: "(CHANGEthisONinstall|{{ old_skey }})"
    replace: "{{ skey }}"

- name: Set fernet keys
  lineinfile:
    path: "{{ server_install_dir }}/django-cloudlaunch/cloudlaunchserver/settings.py"
    regexp: "^FERNET_KEYS="
    line: "FERNET_KEYS={{ fernet_keys }}"

- name: Change ownership of cloudlaunch server to web user
  file:
    recurse: yes
    path: "{{ server_install_dir }}"
    state: 'directory'
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0755'

- name: Ensure nginx can access static path
  file:
    path: "{{ server_install_dir }}/django-cloudlaunch/static/"
    state: 'directory'
    group: 'www-data'
    mode: '0755'

- name: Ensure nginx can access log path
  file:
    path: "{{ log_dir }}"
    state: 'directory'
    group: 'www-data'
    mode: '0755'

- name: Copy the nginx configuration file
  template:
    src: nginx_conf_cloudlaunch.j2
    dest: /etc/nginx/sites-available/cloudlaunch.org
  notify:
   - reload nginx

- name: Symlink to nginx available sites
  file:
    src: /etc/nginx/sites-available/cloudlaunch.org
    dest: /etc/nginx/sites-enabled/cloudlaunch.org
    state: link
  notify:
   - reload nginx

- include: setup_supervisor.yml
...
