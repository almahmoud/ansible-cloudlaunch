upstream cloudlaunch_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server 127.0.0.1:8000 fail_timeout=0;
}

server {

    listen   *:80;
    server_name {{ server_name }};

    return 307 https://$host$request_uri;
}

server {
    listen   *:443 ssl;
    server_name {{ server_name or cert_domains_list[0] }};

    ssl_certificate {{ ssl_cert_path or '/etc/letsencrypt/live/' + cert_domains_list[0] + '/fullchain.pem' }};
    ssl_certificate_key {{ ssl_key_path or '/etc/letsencrypt/live/' + cert_domains_list[0] + '/privkey.pem' }};
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # omit SSLv3 because of POODLE (CVE‑2014‑3566)

    client_max_body_size 4G;
    gzip on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

    access_log {{ log_dir }}nginx-access.log;
    error_log {{ log_dir }}nginx-error.log;

    location {{ cloudlaunch_path_prefix }}/static/ {
        alias   {{ server_install_dir }}/django-cloudlaunch/static/;
    }

    location /cloudlaunch {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header SCRIPT_NAME /cloudlaunch;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.

        if (!-f $request_filename) {
            proxy_pass http://cloudlaunch_server;
            break;
        }
    }

    location / {
        alias   {{ ui_install_dir }}/dist/;
        try_files $uri /index.html;
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root {{ server_install_dir }}/django-cloudlaunch/static/;
    }
}

# Handle legacy redirects
server {
    listen 80;
    listen 443 ssl;
    server_name beta.launch.usegalaxy.org;
    return 301 $scheme://launch.usegalaxy.org$request_uri;
}

server {
    listen 80;
    listen 443 ssl;
    server_name launch.genome.edu.au;
    return 301 $scheme://launch.gvl.org.au$request_uri;
}
